# ==========================================
# dbxgo Configuration File Example (YAML)
# ==========================================

# ---------- Offset Storage Configuration ----------
store:
  type: "file"                # Storage type: file / redis

  file:
    dir: "runtime"            # Directory for storing offset files

  redis:
    addr: "127.0.0.1:6379"   # Redis address
    password: ""              # Redis password (leave empty if none)
    db: 0                     # Redis database number (default 0)

# ---------- Data Source Configuration ----------
source:
  type: "mysql"               # Data source type: mysql

  mysql:
    addr: "127.0.0.1:3306"   # Database address (host:port)
    user: "root"              # Database username (recommended to use a dedicated account in production)
    password: ""              # Database password
    exclude_table_regex:      # Tables to exclude (regex patterns)
      - "mysql.*"
      - "information_schema.*"
      - "performance_schema.*"
      - "sys.*"
    include_table_regex:      # Tables to include (regex patterns, empty = all except excluded)
      - "dbxgo.*"             # Example: only listen to dbxgo tables

# ---------- Output Configuration ----------
output:
  type: "stdout"              # Output type: stdout / kafka / redis / rabbitmq / rocketmq / pulsar

  # Kafka settings
  kafka:
    brokers:
      - "127.0.0.1:9092"      # Kafka broker list
    topic: "dbxgo-events"     # Kafka topic name

  # RabbitMQ settings
  rabbitmq:
    url: "amqp://guest:guest@127.0.0.1:5672/" # RabbitMQ connection URL
    exchange: "dbxgo-exchange" # Exchange name
    queue: "dbxgo-events"      # Queue name
    durable: true              # Whether the queue should survive server restarts
    auto_delete: false         # Whether the queue should auto-delete when unused
    auto_ack: false            # Whether to auto-acknowledge messages
    exclusive: false           # Whether the queue is exclusive to this connection
    no_wait: false             # Whether to wait for the server to confirm queue declaration

  # Redis settings
  redis:
    addr: "127.0.0.1:6379"     # Redis address
    password: ""               # Redis password
    db: 0                      # Redis database number
    key: "dbxgo-events"        # Redis key for storing events

  # RocketMQ settings
  rocketmq:
    servers:
      - "127.0.0.1:9876"       # RocketMQ NameServer address
    topic: "dbxgo-events"      # RocketMQ topic name
    group: "dbxgo-group"       # Producer group name
    namespace: ""              # Namespace
    access_key: ""             # Access key
    secret_key: ""             # Secret key
    retry: 3                   # Retry count on failure

  # Pulsar settings
  pulsar:
    url: "pulsar://127.0.0.1:6650"  # Pulsar broker URL
    topic: "dbxgo-events"           # Pulsar topic name
    token: "YOUR_PULSAR_TOKEN"      # Optional authentication token
    operation_timeout: 30           # Operation timeout in seconds
    connection_timeout: 30          # Connection timeout in seconds
